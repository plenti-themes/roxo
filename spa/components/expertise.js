/* generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	claim_text,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	space,
	text
} from '../web_modules/svelte/internal/index.mjs';

function create_fragment(ctx) {
	let section;
	let div4;
	let div3;
	let div1;
	let div0;
	let h2;
	let t0;
	let t1;
	let div2;
	let ul;
	let li0;
	let t2_value = /*items*/ ctx[1].item1 + "";
	let t2;
	let t3;
	let li1;
	let t4_value = /*items*/ ctx[1].item2 + "";
	let t4;
	let t5;
	let li2;
	let t6_value = /*items*/ ctx[1].item3 + "";
	let t6;
	let t7;
	let li3;
	let t8_value = /*items*/ ctx[1].item4 + "";
	let t8;
	let t9;
	let li4;
	let t10_value = /*items*/ ctx[1].item5 + "";
	let t10;
	let t11;
	let li5;
	let t12_value = /*items*/ ctx[1].item6 + "";
	let t12;
	let t13;
	let li6;
	let t14_value = /*items*/ ctx[1].item7 + "";
	let t14;
	let t15;
	let li7;
	let t16_value = /*items*/ ctx[1].item8 + "";
	let t16;
	let t17;
	let li8;
	let t18_value = /*items*/ ctx[1].item9 + "";
	let t18;
	let t19;
	let li9;
	let t20_value = /*items*/ ctx[1].item10 + "";
	let t20;
	let t21;
	let li10;
	let t22_value = /*items*/ ctx[1].item11 + "";
	let t22;

	return {
		c() {
			section = element("section");
			div4 = element("div");
			div3 = element("div");
			div1 = element("div");
			div0 = element("div");
			h2 = element("h2");
			t0 = text(/*title*/ ctx[0]);
			t1 = space();
			div2 = element("div");
			ul = element("ul");
			li0 = element("li");
			t2 = text(t2_value);
			t3 = space();
			li1 = element("li");
			t4 = text(t4_value);
			t5 = space();
			li2 = element("li");
			t6 = text(t6_value);
			t7 = space();
			li3 = element("li");
			t8 = text(t8_value);
			t9 = space();
			li4 = element("li");
			t10 = text(t10_value);
			t11 = space();
			li5 = element("li");
			t12 = text(t12_value);
			t13 = space();
			li6 = element("li");
			t14 = text(t14_value);
			t15 = space();
			li7 = element("li");
			t16 = text(t16_value);
			t17 = space();
			li8 = element("li");
			t18 = text(t18_value);
			t19 = space();
			li9 = element("li");
			t20 = text(t20_value);
			t21 = space();
			li10 = element("li");
			t22 = text(t22_value);
			this.h();
		},
		l(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div4 = claim_element(section_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			div1 = claim_element(div3_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h2 = claim_element(div0_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, /*title*/ ctx[0]);
			h2_nodes.forEach(detach);
			div0_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			t1 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			ul = claim_element(div2_nodes, "UL", { class: true });
			var ul_nodes = children(ul);
			li0 = claim_element(ul_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			t2 = claim_text(li0_nodes, t2_value);
			li0_nodes.forEach(detach);
			t3 = claim_space(ul_nodes);
			li1 = claim_element(ul_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			t4 = claim_text(li1_nodes, t4_value);
			li1_nodes.forEach(detach);
			t5 = claim_space(ul_nodes);
			li2 = claim_element(ul_nodes, "LI", { class: true });
			var li2_nodes = children(li2);
			t6 = claim_text(li2_nodes, t6_value);
			li2_nodes.forEach(detach);
			t7 = claim_space(ul_nodes);
			li3 = claim_element(ul_nodes, "LI", { class: true });
			var li3_nodes = children(li3);
			t8 = claim_text(li3_nodes, t8_value);
			li3_nodes.forEach(detach);
			t9 = claim_space(ul_nodes);
			li4 = claim_element(ul_nodes, "LI", { class: true });
			var li4_nodes = children(li4);
			t10 = claim_text(li4_nodes, t10_value);
			li4_nodes.forEach(detach);
			t11 = claim_space(ul_nodes);
			li5 = claim_element(ul_nodes, "LI", { class: true });
			var li5_nodes = children(li5);
			t12 = claim_text(li5_nodes, t12_value);
			li5_nodes.forEach(detach);
			t13 = claim_space(ul_nodes);
			li6 = claim_element(ul_nodes, "LI", { class: true });
			var li6_nodes = children(li6);
			t14 = claim_text(li6_nodes, t14_value);
			li6_nodes.forEach(detach);
			t15 = claim_space(ul_nodes);
			li7 = claim_element(ul_nodes, "LI", { class: true });
			var li7_nodes = children(li7);
			t16 = claim_text(li7_nodes, t16_value);
			li7_nodes.forEach(detach);
			t17 = claim_space(ul_nodes);
			li8 = claim_element(ul_nodes, "LI", { class: true });
			var li8_nodes = children(li8);
			t18 = claim_text(li8_nodes, t18_value);
			li8_nodes.forEach(detach);
			t19 = claim_space(ul_nodes);
			li9 = claim_element(ul_nodes, "LI", { class: true });
			var li9_nodes = children(li9);
			t20 = claim_text(li9_nodes, t20_value);
			li9_nodes.forEach(detach);
			t21 = claim_space(ul_nodes);
			li10 = claim_element(ul_nodes, "LI", { class: true });
			var li10_nodes = children(li10);
			t22 = claim_text(li10_nodes, t22_value);
			li10_nodes.forEach(detach);
			ul_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			div3_nodes.forEach(detach);
			div4_nodes.forEach(detach);
			section_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(h2, "class", "svelte-i088y5");
			attr(div0, "class", "section-title svelte-i088y5");
			attr(div1, "class", "col-md-5");
			attr(li0, "class", "svelte-i088y5");
			attr(li1, "class", "svelte-i088y5");
			attr(li2, "class", "svelte-i088y5");
			attr(li3, "class", "svelte-i088y5");
			attr(li4, "class", "svelte-i088y5");
			attr(li5, "class", "svelte-i088y5");
			attr(li6, "class", "svelte-i088y5");
			attr(li7, "class", "svelte-i088y5");
			attr(li8, "class", "svelte-i088y5");
			attr(li9, "class", "svelte-i088y5");
			attr(li10, "class", "svelte-i088y5");
			attr(ul, "class", "site-expertise-list svelte-i088y5");
			attr(div2, "class", "col-md-6");
			attr(div3, "class", "row");
			attr(div4, "class", "container");
			attr(section, "class", "site-expertise svelte-i088y5");
		},
		m(target, anchor) {
			insert(target, section, anchor);
			append(section, div4);
			append(div4, div3);
			append(div3, div1);
			append(div1, div0);
			append(div0, h2);
			append(h2, t0);
			append(div3, t1);
			append(div3, div2);
			append(div2, ul);
			append(ul, li0);
			append(li0, t2);
			append(ul, t3);
			append(ul, li1);
			append(li1, t4);
			append(ul, t5);
			append(ul, li2);
			append(li2, t6);
			append(ul, t7);
			append(ul, li3);
			append(li3, t8);
			append(ul, t9);
			append(ul, li4);
			append(li4, t10);
			append(ul, t11);
			append(ul, li5);
			append(li5, t12);
			append(ul, t13);
			append(ul, li6);
			append(li6, t14);
			append(ul, t15);
			append(ul, li7);
			append(li7, t16);
			append(ul, t17);
			append(ul, li8);
			append(li8, t18);
			append(ul, t19);
			append(ul, li9);
			append(li9, t20);
			append(ul, t21);
			append(ul, li10);
			append(li10, t22);
		},
		p(ctx, [dirty]) {
			if (dirty & /*title*/ 1) set_data(t0, /*title*/ ctx[0]);
			if (dirty & /*items*/ 2 && t2_value !== (t2_value = /*items*/ ctx[1].item1 + "")) set_data(t2, t2_value);
			if (dirty & /*items*/ 2 && t4_value !== (t4_value = /*items*/ ctx[1].item2 + "")) set_data(t4, t4_value);
			if (dirty & /*items*/ 2 && t6_value !== (t6_value = /*items*/ ctx[1].item3 + "")) set_data(t6, t6_value);
			if (dirty & /*items*/ 2 && t8_value !== (t8_value = /*items*/ ctx[1].item4 + "")) set_data(t8, t8_value);
			if (dirty & /*items*/ 2 && t10_value !== (t10_value = /*items*/ ctx[1].item5 + "")) set_data(t10, t10_value);
			if (dirty & /*items*/ 2 && t12_value !== (t12_value = /*items*/ ctx[1].item6 + "")) set_data(t12, t12_value);
			if (dirty & /*items*/ 2 && t14_value !== (t14_value = /*items*/ ctx[1].item7 + "")) set_data(t14, t14_value);
			if (dirty & /*items*/ 2 && t16_value !== (t16_value = /*items*/ ctx[1].item8 + "")) set_data(t16, t16_value);
			if (dirty & /*items*/ 2 && t18_value !== (t18_value = /*items*/ ctx[1].item9 + "")) set_data(t18, t18_value);
			if (dirty & /*items*/ 2 && t20_value !== (t20_value = /*items*/ ctx[1].item10 + "")) set_data(t20, t20_value);
			if (dirty & /*items*/ 2 && t22_value !== (t22_value = /*items*/ ctx[1].item11 + "")) set_data(t22, t22_value);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(section);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { title } = $$props, { body } = $$props, { items } = $$props;

	$$self.$$set = $$props => {
		if ("title" in $$props) $$invalidate(0, title = $$props.title);
		if ("body" in $$props) $$invalidate(2, body = $$props.body);
		if ("items" in $$props) $$invalidate(1, items = $$props.items);
	};

	return [title, items, body];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { title: 0, body: 2, items: 1 });
	}
}

export default Component;