/* generated by Svelte v3.38.3 */
import {
	SvelteComponent,
	append,
	attr,
	children,
	claim_element,
	claim_space,
	claim_text,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	set_style,
	space,
	text
} from '../web_modules/svelte/internal/index.mjs';

function create_fragment(ctx) {
	let section;
	let div2;
	let div1;
	let div0;
	let h1;
	let t0;
	let t1;
	let ul;
	let li0;
	let a0;
	let span1;
	let span0;
	let t2_value = /*link1*/ ctx[1].title + "";
	let t2;
	let span0_data_text_value;
	let a0_href_value;
	let t3;
	let li1;
	let a1;
	let span3;
	let span2;
	let t4_value = /*link2*/ ctx[2].title + "";
	let t4;
	let span2_data_text_value;
	let a1_href_value;

	return {
		c() {
			section = element("section");
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			h1 = element("h1");
			t0 = text(/*title*/ ctx[0]);
			t1 = space();
			ul = element("ul");
			li0 = element("li");
			a0 = element("a");
			span1 = element("span");
			span0 = element("span");
			t2 = text(t2_value);
			t3 = space();
			li1 = element("li");
			a1 = element("a");
			span3 = element("span");
			span2 = element("span");
			t4 = text(t4_value);
			this.h();
		},
		l(nodes) {
			section = claim_element(nodes, "SECTION", { class: true, style: true });
			var section_nodes = children(section);
			div2 = claim_element(section_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h1 = claim_element(div0_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, /*title*/ ctx[0]);
			h1_nodes.forEach(detach);
			t1 = claim_space(div0_nodes);
			ul = claim_element(div0_nodes, "UL", { class: true });
			var ul_nodes = children(ul);
			li0 = claim_element(ul_nodes, "LI", { class: true });
			var li0_nodes = children(li0);
			a0 = claim_element(li0_nodes, "A", { href: true, class: true });
			var a0_nodes = children(a0);
			span1 = claim_element(a0_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			span0 = claim_element(span1_nodes, "SPAN", { "data-text": true, class: true });
			var span0_nodes = children(span0);
			t2 = claim_text(span0_nodes, t2_value);
			span0_nodes.forEach(detach);
			span1_nodes.forEach(detach);
			a0_nodes.forEach(detach);
			li0_nodes.forEach(detach);
			t3 = claim_space(ul_nodes);
			li1 = claim_element(ul_nodes, "LI", { class: true });
			var li1_nodes = children(li1);
			a1 = claim_element(li1_nodes, "A", { href: true, class: true });
			var a1_nodes = children(a1);
			span3 = claim_element(a1_nodes, "SPAN", { class: true });
			var span3_nodes = children(span3);
			span2 = claim_element(span3_nodes, "SPAN", { "data-text": true, class: true });
			var span2_nodes = children(span2);
			t4 = claim_text(span2_nodes, t4_value);
			span2_nodes.forEach(detach);
			span3_nodes.forEach(detach);
			a1_nodes.forEach(detach);
			li1_nodes.forEach(detach);
			ul_nodes.forEach(detach);
			div0_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			section_nodes.forEach(detach);
			this.h();
		},
		h() {
			attr(h1, "class", "site-cta-title svelte-1yp50zu");
			attr(span0, "data-text", span0_data_text_value = /*link1*/ ctx[1].title);
			attr(span0, "class", "svelte-1yp50zu");
			attr(span1, "class", "btn-area svelte-1yp50zu");
			attr(a0, "href", a0_href_value = /*link1*/ ctx[1].url);
			attr(a0, "class", "btn btn-secondary svelte-1yp50zu");
			attr(li0, "class", "svelte-1yp50zu");
			attr(span2, "data-text", span2_data_text_value = /*link2*/ ctx[2].title);
			attr(span2, "class", "svelte-1yp50zu");
			attr(span3, "class", "btn-area svelte-1yp50zu");
			attr(a1, "href", a1_href_value = /*link2*/ ctx[2].url);
			attr(a1, "class", "btn btn-primary svelte-1yp50zu");
			attr(li1, "class", "svelte-1yp50zu");
			attr(ul, "class", "site-cta-buttons svelte-1yp50zu");
			attr(div0, "class", "col-12 text-center");
			attr(div1, "class", "row");
			attr(div2, "class", "container");
			attr(section, "class", "site-cta svelte-1yp50zu");
			set_style(section, "background-image", "url(\"https://roxo-hugo.staticmania.com/images/backgrounds/cta-background.jpg\")");
		},
		m(target, anchor) {
			insert(target, section, anchor);
			append(section, div2);
			append(div2, div1);
			append(div1, div0);
			append(div0, h1);
			append(h1, t0);
			append(div0, t1);
			append(div0, ul);
			append(ul, li0);
			append(li0, a0);
			append(a0, span1);
			append(span1, span0);
			append(span0, t2);
			append(ul, t3);
			append(ul, li1);
			append(li1, a1);
			append(a1, span3);
			append(span3, span2);
			append(span2, t4);
		},
		p(ctx, [dirty]) {
			if (dirty & /*title*/ 1) set_data(t0, /*title*/ ctx[0]);
			if (dirty & /*link1*/ 2 && t2_value !== (t2_value = /*link1*/ ctx[1].title + "")) set_data(t2, t2_value);

			if (dirty & /*link1*/ 2 && span0_data_text_value !== (span0_data_text_value = /*link1*/ ctx[1].title)) {
				attr(span0, "data-text", span0_data_text_value);
			}

			if (dirty & /*link1*/ 2 && a0_href_value !== (a0_href_value = /*link1*/ ctx[1].url)) {
				attr(a0, "href", a0_href_value);
			}

			if (dirty & /*link2*/ 4 && t4_value !== (t4_value = /*link2*/ ctx[2].title + "")) set_data(t4, t4_value);

			if (dirty & /*link2*/ 4 && span2_data_text_value !== (span2_data_text_value = /*link2*/ ctx[2].title)) {
				attr(span2, "data-text", span2_data_text_value);
			}

			if (dirty & /*link2*/ 4 && a1_href_value !== (a1_href_value = /*link2*/ ctx[2].url)) {
				attr(a1, "href", a1_href_value);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(section);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { title } = $$props, { link1 } = $$props, { link2 } = $$props;

	$$self.$$set = $$props => {
		if ("title" in $$props) $$invalidate(0, title = $$props.title);
		if ("link1" in $$props) $$invalidate(1, link1 = $$props.link1);
		if ("link2" in $$props) $$invalidate(2, link2 = $$props.link2);
	};

	return [title, link1, link2];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { title: 0, link1: 1, link2: 2 });
	}
}

export default Component;